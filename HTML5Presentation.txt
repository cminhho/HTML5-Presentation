HTML5 Presentation
[1/30/2015 10:50 AM] Nguyen Toan Nhan: 
HTML5/CSS3 
HTML5/CSS3 

http://www.w3.org/html/logo/#badge-builder

#What is HTML?
HTML is a markup language for describing web documents (web pages).

HTML stands for Hyper Text Markup Language
A markup language is a set of markup tags
HTML documents are described by HTML tags
Each HTML tag describes different document content

#Rough Timeline of Web Technologies

1991 HTML
1994 HTML 2
1996 CSS 1 + JavaScript
1997 HTML 4
1998 CSS 2
2000 XHTML 1
2002 Tableless Web Design
2005 AJAX
2009 HTML 5

#What is the HTML5
HTML5 ~= HTML + CSS + JS
Written by Joshua Jobnson, On 19th October 2009 Filed in HTML, Web Standards

World Wide Web Consotium(W3C) and the Web Hypertext Application Technology Working Group(WHATWG)

Still a work in progress. However, most modern browsers have some HTML5 support. 
http://HTML5Test.com 

Today, we will cover...

#Offline / Storage
 + Web Storage
 localStorage: store data with no time limit
 sessionStorage: stores data for one session
 
localStorage Methods: 
 getItem: Retrieves the current value associated with the key.
	window.localStorage.getItem(key)
 setItem: Set a key/value pair
	window.localStorage.setItem(key, value);
 removeItem: Deletes a key/value pair from the DOM Storage collection
	window.localStorage.removeItem(key)
 clear: Removes all key/value pairs from the DOM Storage area.
	window.localStorage.clear();
 Key: Retrieves the key at the specified index in the collection
	window.localStorage.key(n)
 
 constructor: Returns a reference to the contructor
	In FF, localStorage.contructor !== Storage
 length: Retrieves the length of the key/value list
 
var storage = window.localStorage
console.dir(storage)
storage.setItem('key', 'value')
storage.setItem('time', (new Date).getTime())
storage.getItem('key');
storage.key('position')
storage.removeItem('key')
storage.length
 
document.querySelector('#ta').value = 'Ho Minh Chung';
document.querySelector('#save-ta').click();
 
--------------------------------------------------------------------------------------
 + Web SQL Databases
 


#SQL API: Database Object 
##Methods:
	+ openDatabase
	+ transaction
	+ readTransaction
	+ changeVersion: Change the DB's versioin
 
##Properties
	+ version: The DB's current version

#SQL API: openDatabase 
	+ window.openDatabase('DatabaseName', 'DatabaseVersion', 'DisplayName', 'EstimatedSize')
	+ example: var db = openDatabse('Employee', '1.0', 'Employee's sweet DB', 1024*1024);

#SQL API: transaction & readTransaction
##db.transaction(transactionCallback, errorCallback)
	+ db.transaction(function(tx){
		// EXECUTE SQL CODE tx HERE
	}, function(e){
		alert(tx, e)
	})
## The SQLTransaction Object has only method: executeSql		
#SQL API: executeSql
## transaction.executeSQL(SQLStatement, SQLParameters, ResultsetCallback, ErrorCallback) 
	+ SQLStatement: A valid SQLite statement
	+ SQLParameters: Array of values
	+ ResultsetCallback: Method to handle the returned results
	+ ErrorCallback: Method to handle a failed execution
	
	db.transaction(function(tx){
		tx.executeSql(
			"SELECT * FROM table WHERE id=?", 
			[1],
			function(tx, SQLResultSet){
				console.log(result.rows.item(0)['id'])
			}
		)
	})
--------------------------------------------------------------------------------------
 + IndexedDB
 + Application Cache
 + Quota API
#Realtime / Communication
 + Web Workers
 + WebSocket
 + Notifications
#File / Hardware Access
 + Native Drag & Drop
 + Desktop Drag-In (File API)
 + Destop Drag-Out 
 + FileSystem APIs (demo - ko can thiet)
 + Geolocation (cần)
 + Device Orientation (sơ sơ - demo)
 + Speech Input (demo)
#Semantics & Markup
--------------------------------------------------------------------------------------
 + Better semantic tags
	<article> Defines external content
	<aside> Defines some content aside from the article it is placed in
	<audio> Defines sound, such as music or other audio streams
	<canvas> Defines graphic, such as graphs or other images
	<command> Defines a command button, like a radio button, a checkbox, or a button
	<datagrid> Defines a list of selectable data. The datagrid is displayed as a tree list
	<datalist> Defines a list of selectable data. Use this element together with the input eleemnt, to make a dropdown list for the input's value
	<details> Defines of an element, which the user can see, and click to hide
	<dialog> Defines a dialog, such as a conversation
	<nav> Defines a section of navigation links
	<q> Defines a short quotation
	<time> Defines a time or a data, or both
	<video> Defines video, such as a movie clip or other video streams
	<meter> Defines the range
 --------------------------------------------------------------------------------------
 + Markup for application
 + Description link relations
 + Microdata
 + ARIA attributes
 + New from types
 + Form field types on mobile
#Graphics / Multimedia
 + Autido - Video (sơ sơ)
 + Track Element (sơ sơ)
 + FullScreen API
 + Canvas 2D
 + Canvas example
 + Canvas 3D(WebGL)
#CSS3
 + CSS Selectors
 + Webfonts
 + Text wrapping
 + Columns
 + Text stroke
 + Opacity
 + Hue/saturation/luminance color
 + Rounded corners
 + Gradients
 + Shadows
 + Instant Web 2.0 (just add sliders)
 + Background enhancements
 + Border image
 + Flexible Box Model
 + Transitions
 + Transforms
 + Animations
#Nuts & Bolts
 + New Selectors
 + Custom data-* attributes
 + Element.classList
 + History API